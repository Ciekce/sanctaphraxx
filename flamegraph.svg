<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="49009"><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::push (13 samples, 0.03%)</title><rect x="0.0306%" y="245" width="0.0265%" height="15" fill="rgb(227,0,7)" fg:x="15" fg:w="13"/><text x="0.2806%" y="255.50"></text></g><g><title>sanctaphraxx.exe`core::ptr::write (13 samples, 0.03%)</title><rect x="0.0306%" y="229" width="0.0265%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="13"/><text x="0.2806%" y="239.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::apply_move&lt;true,false&gt;(enum2$ (22 samples, 0.04%)</title><rect x="0.0245%" y="261" width="0.0449%" height="15" fill="rgb(221,193,54)" fg:x="12" fg:w="22"/><text x="0.2745%" y="271.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::impl$5::clone (5 samples, 0.01%)</title><rect x="0.0592%" y="245" width="0.0102%" height="15" fill="rgb(248,212,6)" fg:x="29" fg:w="5"/><text x="0.3092%" y="255.50"></text></g><g><title>`0x7FFF358B1497 (13 samples, 0.03%)</title><rect x="0.1265%" y="213" width="0.0265%" height="15" fill="rgb(208,68,35)" fg:x="62" fg:w="13"/><text x="0.3765%" y="223.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::impl$10::next(arrayvec::arrayvec::IntoIter&lt;enum2$ (15 samples, 0.03%)</title><rect x="0.1714%" y="213" width="0.0306%" height="15" fill="rgb(232,128,0)" fg:x="84" fg:w="15"/><text x="0.4214%" y="223.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;::push(enum2$ (12 samples, 0.02%)</title><rect x="0.2224%" y="197" width="0.0245%" height="15" fill="rgb(207,160,47)" fg:x="109" fg:w="12"/><text x="0.4724%" y="207.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::push(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (12 samples, 0.02%)</title><rect x="0.2224%" y="181" width="0.0245%" height="15" fill="rgb(228,23,34)" fg:x="109" fg:w="12"/><text x="0.4724%" y="191.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::try_push(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (10 samples, 0.02%)</title><rect x="0.2265%" y="165" width="0.0204%" height="15" fill="rgb(218,30,26)" fg:x="111" fg:w="10"/><text x="0.4765%" y="175.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (7 samples, 0.01%)</title><rect x="0.2326%" y="149" width="0.0143%" height="15" fill="rgb(220,122,19)" fg:x="114" fg:w="7"/><text x="0.4826%" y="159.50"></text></g><g><title>sanctaphraxx.exe`core::ptr::write(enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;*, enum2$ (5 samples, 0.01%)</title><rect x="0.2367%" y="133" width="0.0102%" height="15" fill="rgb(250,228,42)" fg:x="116" fg:w="5"/><text x="0.4867%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$14::next (9 samples, 0.02%)</title><rect x="0.2469%" y="197" width="0.0184%" height="15" fill="rgb(240,193,28)" fg:x="121" fg:w="9"/><text x="0.4969%" y="207.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::is_empty (6 samples, 0.01%)</title><rect x="0.2530%" y="181" width="0.0122%" height="15" fill="rgb(216,20,37)" fg:x="124" fg:w="6"/><text x="0.5030%" y="191.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::movegen::generate_moves(arrayvec::arrayvec::ArrayVec&lt;enum2$ (33 samples, 0.07%)</title><rect x="0.2020%" y="213" width="0.0673%" height="15" fill="rgb(206,188,39)" fg:x="99" fg:w="33"/><text x="0.4520%" y="223.50"></text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::push (474 samples, 0.97%)</title><rect x="0.4101%" y="197" width="0.9672%" height="15" fill="rgb(217,207,13)" fg:x="201" fg:w="474"/><text x="0.6601%" y="207.50"></text></g><g><title>sanctaphraxx.exe`core::ptr::write (463 samples, 0.94%)</title><rect x="0.4326%" y="181" width="0.9447%" height="15" fill="rgb(231,73,38)" fg:x="212" fg:w="463"/><text x="0.6826%" y="191.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::core::Color::flip (7 samples, 0.01%)</title><rect x="1.3855%" y="197" width="0.0143%" height="15" fill="rgb(225,20,46)" fg:x="679" fg:w="7"/><text x="1.6355%" y="207.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::apply_move&lt;true,false&gt;(enum2$ (567 samples, 1.16%)</title><rect x="0.2693%" y="213" width="1.1569%" height="15" fill="rgb(210,31,41)" fg:x="132" fg:w="567"/><text x="0.5193%" y="223.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::impl$5::clone (10 samples, 0.02%)</title><rect x="1.4059%" y="197" width="0.0204%" height="15" fill="rgb(221,200,47)" fg:x="689" fg:w="10"/><text x="1.6559%" y="207.50"></text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::as_ptr (6 samples, 0.01%)</title><rect x="1.4426%" y="181" width="0.0122%" height="15" fill="rgb(226,26,5)" fg:x="707" fg:w="6"/><text x="1.6926%" y="191.50"></text></g><g><title>`0x7FFF358B131A (9 samples, 0.02%)</title><rect x="2.2812%" y="165" width="0.0184%" height="15" fill="rgb(249,33,26)" fg:x="1118" fg:w="9"/><text x="2.5312%" y="175.50"></text></g><g><title>`0x7FFF358B1450 (7 samples, 0.01%)</title><rect x="2.3016%" y="165" width="0.0143%" height="15" fill="rgb(235,183,28)" fg:x="1128" fg:w="7"/><text x="2.5516%" y="175.50"></text></g><g><title>`0x7FFF358B1490 (75 samples, 0.15%)</title><rect x="2.3200%" y="165" width="0.1530%" height="15" fill="rgb(221,5,38)" fg:x="1137" fg:w="75"/><text x="2.5700%" y="175.50"></text></g><g><title>`0x7FFF358B1497 (342 samples, 0.70%)</title><rect x="2.4730%" y="165" width="0.6978%" height="15" fill="rgb(247,18,42)" fg:x="1212" fg:w="342"/><text x="2.7230%" y="175.50"></text></g><g><title>`0x7FFF358B14CC (7 samples, 0.01%)</title><rect x="3.1708%" y="165" width="0.0143%" height="15" fill="rgb(241,131,45)" fg:x="1554" fg:w="7"/><text x="3.4208%" y="175.50"></text></g><g><title>`0x7FFF358B14E9 (7 samples, 0.01%)</title><rect x="3.1892%" y="165" width="0.0143%" height="15" fill="rgb(249,31,29)" fg:x="1563" fg:w="7"/><text x="3.4392%" y="175.50"></text></g><g><title>`0x7FFF358B14EE (9 samples, 0.02%)</title><rect x="3.2035%" y="165" width="0.0184%" height="15" fill="rgb(225,111,53)" fg:x="1570" fg:w="9"/><text x="3.4535%" y="175.50"></text></g><g><title>`0x7FFF358B1501 (13 samples, 0.03%)</title><rect x="3.2280%" y="165" width="0.0265%" height="15" fill="rgb(238,160,17)" fg:x="1582" fg:w="13"/><text x="3.4780%" y="175.50"></text></g><g><title>`0x7FFF358B151E (16 samples, 0.03%)</title><rect x="3.2627%" y="165" width="0.0326%" height="15" fill="rgb(214,148,48)" fg:x="1599" fg:w="16"/><text x="3.5127%" y="175.50"></text></g><g><title>`0x7FFF358B153E (13 samples, 0.03%)</title><rect x="3.3014%" y="165" width="0.0265%" height="15" fill="rgb(232,36,49)" fg:x="1618" fg:w="13"/><text x="3.5514%" y="175.50"></text></g><g><title>`0x7FFF358B1554 (12 samples, 0.02%)</title><rect x="3.3341%" y="165" width="0.0245%" height="15" fill="rgb(209,103,24)" fg:x="1634" fg:w="12"/><text x="3.5841%" y="175.50"></text></g><g><title>`0x7FFF358B1582 (21 samples, 0.04%)</title><rect x="3.3667%" y="165" width="0.0428%" height="15" fill="rgb(229,88,8)" fg:x="1650" fg:w="21"/><text x="3.6167%" y="175.50"></text></g><g><title>`0x7FFF358B15CB (19 samples, 0.04%)</title><rect x="3.4116%" y="165" width="0.0388%" height="15" fill="rgb(213,181,19)" fg:x="1672" fg:w="19"/><text x="3.6616%" y="175.50"></text></g><g><title>`0x7FFF358B1606 (19 samples, 0.04%)</title><rect x="3.4647%" y="165" width="0.0388%" height="15" fill="rgb(254,191,54)" fg:x="1698" fg:w="19"/><text x="3.7147%" y="175.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::impl$10::next(arrayvec::arrayvec::IntoIter&lt;enum2$ (170 samples, 0.35%)</title><rect x="3.5096%" y="165" width="0.3469%" height="15" fill="rgb(241,83,37)" fg:x="1720" fg:w="170"/><text x="3.7596%" y="175.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::impl$2::set_len(arrayvec::arrayvec::ArrayVec&lt;enum2$ (10 samples, 0.02%)</title><rect x="4.4257%" y="85" width="0.0204%" height="15" fill="rgb(233,36,39)" fg:x="2169" fg:w="10"/><text x="4.6757%" y="95.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;::push(enum2$ (289 samples, 0.59%)</title><rect x="4.0748%" y="149" width="0.5897%" height="15" fill="rgb(226,3,54)" fg:x="1997" fg:w="289"/><text x="4.3248%" y="159.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::push(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (289 samples, 0.59%)</title><rect x="4.0748%" y="133" width="0.5897%" height="15" fill="rgb(245,192,40)" fg:x="1997" fg:w="289"/><text x="4.3248%" y="143.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::try_push(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (213 samples, 0.43%)</title><rect x="4.2298%" y="117" width="0.4346%" height="15" fill="rgb(238,167,29)" fg:x="2073" fg:w="213"/><text x="4.4798%" y="127.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (154 samples, 0.31%)</title><rect x="4.3502%" y="101" width="0.3142%" height="15" fill="rgb(232,182,51)" fg:x="2132" fg:w="154"/><text x="4.6002%" y="111.50"></text></g><g><title>sanctaphraxx.exe`core::ptr::write(enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;*, enum2$ (107 samples, 0.22%)</title><rect x="4.4461%" y="85" width="0.2183%" height="15" fill="rgb(231,60,39)" fg:x="2179" fg:w="107"/><text x="4.6961%" y="95.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::is_empty (103 samples, 0.21%)</title><rect x="4.8195%" y="133" width="0.2102%" height="15" fill="rgb(208,69,12)" fg:x="2362" fg:w="103"/><text x="5.0695%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$14::next (176 samples, 0.36%)</title><rect x="4.6726%" y="149" width="0.3591%" height="15" fill="rgb(235,93,37)" fg:x="2290" fg:w="176"/><text x="4.9226%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::and (7 samples, 0.01%)</title><rect x="5.0909%" y="117" width="0.0143%" height="15" fill="rgb(213,116,39)" fg:x="2495" fg:w="7"/><text x="5.3409%" y="127.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::or (7 samples, 0.01%)</title><rect x="5.1052%" y="117" width="0.0143%" height="15" fill="rgb(222,207,29)" fg:x="2502" fg:w="7"/><text x="5.3552%" y="127.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_down (14 samples, 0.03%)</title><rect x="5.1195%" y="117" width="0.0286%" height="15" fill="rgb(206,96,30)" fg:x="2509" fg:w="14"/><text x="5.3695%" y="127.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_right (9 samples, 0.02%)</title><rect x="5.1562%" y="117" width="0.0184%" height="15" fill="rgb(218,138,4)" fg:x="2527" fg:w="9"/><text x="5.4062%" y="127.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::expand (58 samples, 0.12%)</title><rect x="5.0909%" y="133" width="0.1183%" height="15" fill="rgb(250,191,14)" fg:x="2495" fg:w="58"/><text x="5.3409%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_up (17 samples, 0.03%)</title><rect x="5.1746%" y="117" width="0.0347%" height="15" fill="rgb(239,60,40)" fg:x="2536" fg:w="17"/><text x="5.4246%" y="127.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::is_empty (42 samples, 0.09%)</title><rect x="5.2092%" y="133" width="0.0857%" height="15" fill="rgb(206,27,48)" fg:x="2553" fg:w="42"/><text x="5.4592%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::BoardState::occupancy (8 samples, 0.02%)</title><rect x="5.2990%" y="133" width="0.0163%" height="15" fill="rgb(225,35,8)" fg:x="2597" fg:w="8"/><text x="5.5490%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$4::bitor (8 samples, 0.02%)</title><rect x="5.2990%" y="117" width="0.0163%" height="15" fill="rgb(250,213,24)" fg:x="2597" fg:w="8"/><text x="5.5490%" y="127.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::or (8 samples, 0.02%)</title><rect x="5.2990%" y="101" width="0.0163%" height="15" fill="rgb(247,123,22)" fg:x="2597" fg:w="8"/><text x="5.5490%" y="111.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::movegen::generate_moves(arrayvec::arrayvec::ArrayVec&lt;enum2$ (745 samples, 1.52%)</title><rect x="3.8564%" y="165" width="1.5201%" height="15" fill="rgb(231,138,38)" fg:x="1890" fg:w="745"/><text x="4.1064%" y="175.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::game_over (169 samples, 0.34%)</title><rect x="5.0317%" y="149" width="0.3448%" height="15" fill="rgb(231,145,46)" fg:x="2466" fg:w="169"/><text x="5.2817%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::curr_state (30 samples, 0.06%)</title><rect x="5.3154%" y="133" width="0.0612%" height="15" fill="rgb(251,118,11)" fg:x="2605" fg:w="30"/><text x="5.5654%" y="143.50"></text></g><g><title>sanctaphraxx.exe`core::slice::impl$0::last(ref$&lt;slice2$ (30 samples, 0.06%)</title><rect x="5.3154%" y="117" width="0.0612%" height="15" fill="rgb(217,147,25)" fg:x="2605" fg:w="30"/><text x="5.5654%" y="127.50"></text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::push (14,563 samples, 29.71%)</title><rect x="9.6982%" y="149" width="29.7150%" height="15" fill="rgb(247,81,37)" fg:x="4753" fg:w="14563"/><text x="9.9482%" y="159.50">sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::p..</text></g><g><title>sanctaphraxx.exe`core::ptr::write (14,289 samples, 29.16%)</title><rect x="10.2573%" y="133" width="29.1559%" height="15" fill="rgb(209,12,38)" fg:x="5027" fg:w="14289"/><text x="10.5073%" y="143.50">sanctaphraxx.exe`core::ptr::write</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$4::bitor (109 samples, 0.22%)</title><rect x="39.4152%" y="149" width="0.2224%" height="15" fill="rgb(227,1,9)" fg:x="19317" fg:w="109"/><text x="39.6652%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::or (109 samples, 0.22%)</title><rect x="39.4152%" y="133" width="0.2224%" height="15" fill="rgb(248,47,43)" fg:x="19317" fg:w="109"/><text x="39.6652%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$7::bitxor_assign (369 samples, 0.75%)</title><rect x="39.6376%" y="149" width="0.7529%" height="15" fill="rgb(221,10,30)" fg:x="19426" fg:w="369"/><text x="39.8876%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::core::Color::flip (10 samples, 0.02%)</title><rect x="40.3905%" y="149" width="0.0204%" height="15" fill="rgb(210,229,1)" fg:x="19795" fg:w="10"/><text x="40.6405%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::core::Color::idx (142 samples, 0.29%)</title><rect x="40.4109%" y="149" width="0.2897%" height="15" fill="rgb(222,148,37)" fg:x="19805" fg:w="142"/><text x="40.6609%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::core::Square::bit (16 samples, 0.03%)</title><rect x="40.7007%" y="149" width="0.0326%" height="15" fill="rgb(234,67,33)" fg:x="19947" fg:w="16"/><text x="40.9507%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::core::Square::bit_idx (70 samples, 0.14%)</title><rect x="40.7333%" y="149" width="0.1428%" height="15" fill="rgb(247,98,35)" fg:x="19963" fg:w="70"/><text x="40.9833%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::curr_state (84 samples, 0.17%)</title><rect x="40.8762%" y="149" width="0.1714%" height="15" fill="rgb(247,138,52)" fg:x="20033" fg:w="84"/><text x="41.1262%" y="159.50"></text></g><g><title>sanctaphraxx.exe`core::slice::impl$0::last(ref$&lt;slice2$ (84 samples, 0.17%)</title><rect x="40.8762%" y="133" width="0.1714%" height="15" fill="rgb(213,79,30)" fg:x="20033" fg:w="84"/><text x="41.1262%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::side_to_move (88 samples, 0.18%)</title><rect x="41.0476%" y="149" width="0.1796%" height="15" fill="rgb(246,177,23)" fg:x="20117" fg:w="88"/><text x="41.2976%" y="159.50"></text></g><g><title>sanctaphraxx.exe`core::array::impl$20::clone (33 samples, 0.07%)</title><rect x="41.5148%" y="133" width="0.0673%" height="15" fill="rgb(230,62,27)" fg:x="20346" fg:w="33"/><text x="41.7648%" y="143.50"></text></g><g><title>sanctaphraxx.exe`core::array::impl$22::clone (33 samples, 0.07%)</title><rect x="41.5148%" y="117" width="0.0673%" height="15" fill="rgb(216,154,8)" fg:x="20346" fg:w="33"/><text x="41.7648%" y="127.50"></text></g><g><title>sanctaphraxx.exe`core::clone::impls::impl$9::clone (164 samples, 0.33%)</title><rect x="41.5822%" y="133" width="0.3346%" height="15" fill="rgb(244,35,45)" fg:x="20379" fg:w="164"/><text x="41.8322%" y="143.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::apply_move&lt;true,false&gt;(enum2$ (17,998 samples, 36.72%)</title><rect x="5.3766%" y="165" width="36.7239%" height="15" fill="rgb(251,115,12)" fg:x="2635" fg:w="17998"/><text x="5.6266%" y="175.50">sanctaphraxx.exe`sanctaphraxx::position::Position::apply_mov..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::impl$5::clone (428 samples, 0.87%)</title><rect x="41.2271%" y="149" width="0.8733%" height="15" fill="rgb(240,54,50)" fg:x="20205" fg:w="428"/><text x="41.4771%" y="159.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::ataxx_move::impl$5::clone(enum2$ (90 samples, 0.18%)</title><rect x="41.9168%" y="133" width="0.1836%" height="15" fill="rgb(233,84,52)" fg:x="20543" fg:w="90"/><text x="42.1668%" y="143.50"></text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::as_ptr (257 samples, 0.52%)</title><rect x="42.6595%" y="133" width="0.5244%" height="15" fill="rgb(207,117,47)" fg:x="20907" fg:w="257"/><text x="42.9095%" y="143.50"></text></g><g><title>sanctaphraxx.exe`alloc::raw_vec::RawVec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::ptr (7 samples, 0.01%)</title><rect x="43.1696%" y="117" width="0.0143%" height="15" fill="rgb(249,43,39)" fg:x="21157" fg:w="7"/><text x="43.4196%" y="127.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::impl$2::set_len(arrayvec::arrayvec::ArrayVec&lt;enum2$ (475 samples, 0.97%)</title><rect x="70.4932%" y="37" width="0.9692%" height="15" fill="rgb(209,38,44)" fg:x="34548" fg:w="475"/><text x="70.7432%" y="47.50"></text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;::push(enum2$ (11,527 samples, 23.52%)</title><rect x="55.4429%" y="101" width="23.5202%" height="15" fill="rgb(236,212,23)" fg:x="27172" fg:w="11527"/><text x="55.6929%" y="111.50">sanctaphraxx.exe`arrayvec::arrayvec::..</text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::push(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (11,527 samples, 23.52%)</title><rect x="55.4429%" y="85" width="23.5202%" height="15" fill="rgb(242,79,21)" fg:x="27172" fg:w="11527"/><text x="55.6929%" y="95.50">sanctaphraxx.exe`arrayvec::arrayvec_i..</text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::try_push(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (8,066 samples, 16.46%)</title><rect x="62.5048%" y="69" width="16.4582%" height="15" fill="rgb(211,96,35)" fg:x="30633" fg:w="8066"/><text x="62.7548%" y="79.50">sanctaphraxx.exe`arrayvec..</text></g><g><title>sanctaphraxx.exe`arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked(arrayvec::arrayvec::ArrayVec&lt;enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;,256&gt;*, enum2$ (5,904 samples, 12.05%)</title><rect x="66.9163%" y="53" width="12.0468%" height="15" fill="rgb(253,215,40)" fg:x="32795" fg:w="5904"/><text x="67.1663%" y="63.50">sanctaphraxx.exe`a..</text></g><g><title>sanctaphraxx.exe`core::ptr::write(enum2$&lt;sanctaphraxx::ataxx_move::AtaxxMove&gt;*, enum2$ (3,676 samples, 7.50%)</title><rect x="71.4624%" y="37" width="7.5007%" height="15" fill="rgb(211,81,21)" fg:x="35023" fg:w="3676"/><text x="71.7124%" y="47.50">sanctaphra..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::or (147 samples, 0.30%)</title><rect x="78.9630%" y="85" width="0.2999%" height="15" fill="rgb(208,190,38)" fg:x="38699" fg:w="147"/><text x="79.2130%" y="95.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::expand (149 samples, 0.30%)</title><rect x="78.9630%" y="101" width="0.3040%" height="15" fill="rgb(235,213,38)" fg:x="38699" fg:w="149"/><text x="79.2130%" y="111.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::is_empty (4,842 samples, 9.88%)</title><rect x="84.3661%" y="85" width="9.8798%" height="15" fill="rgb(237,122,38)" fg:x="41347" fg:w="4842"/><text x="84.6161%" y="95.50">sanctaphraxx.e..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$14::next (7,372 samples, 15.04%)</title><rect x="79.2671%" y="101" width="15.0421%" height="15" fill="rgb(244,218,35)" fg:x="38848" fg:w="7372"/><text x="79.5171%" y="111.50">sanctaphraxx.exe`sancta..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::pop_lowest_square (31 samples, 0.06%)</title><rect x="94.2460%" y="85" width="0.0633%" height="15" fill="rgb(240,68,47)" fg:x="46189" fg:w="31"/><text x="94.4960%" y="95.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::lowest_square (31 samples, 0.06%)</title><rect x="94.2460%" y="69" width="0.0633%" height="15" fill="rgb(210,16,53)" fg:x="46189" fg:w="31"/><text x="94.4960%" y="79.50"></text></g><g><title>sanctaphraxx.exe`core::num::impl$9::trailing_zeros (31 samples, 0.06%)</title><rect x="94.2460%" y="53" width="0.0633%" height="15" fill="rgb(235,124,12)" fg:x="46189" fg:w="31"/><text x="94.4960%" y="63.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::and (164 samples, 0.33%)</title><rect x="95.3968%" y="69" width="0.3346%" height="15" fill="rgb(224,169,11)" fg:x="46753" fg:w="164"/><text x="95.6468%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::or (113 samples, 0.23%)</title><rect x="95.7314%" y="69" width="0.2306%" height="15" fill="rgb(250,166,2)" fg:x="46917" fg:w="113"/><text x="95.9814%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_down (163 samples, 0.33%)</title><rect x="95.9620%" y="69" width="0.3326%" height="15" fill="rgb(242,216,29)" fg:x="47030" fg:w="163"/><text x="96.2120%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_left (49 samples, 0.10%)</title><rect x="96.2946%" y="69" width="0.1000%" height="15" fill="rgb(230,116,27)" fg:x="47193" fg:w="49"/><text x="96.5446%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_right (192 samples, 0.39%)</title><rect x="96.3945%" y="69" width="0.3918%" height="15" fill="rgb(228,99,48)" fg:x="47242" fg:w="192"/><text x="96.6445%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::expand (930 samples, 1.90%)</title><rect x="95.3968%" y="85" width="1.8976%" height="15" fill="rgb(253,11,6)" fg:x="46753" fg:w="930"/><text x="95.6468%" y="95.50">s..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::shift_up (249 samples, 0.51%)</title><rect x="96.7863%" y="69" width="0.5081%" height="15" fill="rgb(247,143,39)" fg:x="47434" fg:w="249"/><text x="97.0363%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::and (52 samples, 0.11%)</title><rect x="97.1883%" y="53" width="0.1061%" height="15" fill="rgb(236,97,10)" fg:x="47631" fg:w="52"/><text x="97.4383%" y="63.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::is_empty (480 samples, 0.98%)</title><rect x="97.2944%" y="85" width="0.9794%" height="15" fill="rgb(233,208,19)" fg:x="47683" fg:w="480"/><text x="97.5444%" y="95.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::BoardState::empty_squares (95 samples, 0.19%)</title><rect x="98.2819%" y="85" width="0.1938%" height="15" fill="rgb(216,164,2)" fg:x="48167" fg:w="95"/><text x="98.5319%" y="95.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$2::bitand (95 samples, 0.19%)</title><rect x="98.2819%" y="69" width="0.1938%" height="15" fill="rgb(220,129,5)" fg:x="48167" fg:w="95"/><text x="98.5319%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::and (95 samples, 0.19%)</title><rect x="98.2819%" y="53" width="0.1938%" height="15" fill="rgb(242,17,10)" fg:x="48167" fg:w="95"/><text x="98.5319%" y="63.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::BoardState::occupancy (88 samples, 0.18%)</title><rect x="98.4758%" y="85" width="0.1796%" height="15" fill="rgb(242,107,0)" fg:x="48262" fg:w="88"/><text x="98.7258%" y="95.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::impl$4::bitor (88 samples, 0.18%)</title><rect x="98.4758%" y="69" width="0.1796%" height="15" fill="rgb(251,28,31)" fg:x="48262" fg:w="88"/><text x="98.7258%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::bitboard::Bitboard::or (88 samples, 0.18%)</title><rect x="98.4758%" y="53" width="0.1796%" height="15" fill="rgb(233,223,10)" fg:x="48262" fg:w="88"/><text x="98.7258%" y="63.50"></text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop (28,116 samples, 57.37%)</title><rect x="42.5963%" y="149" width="57.3691%" height="15" fill="rgb(215,21,27)" fg:x="20876" fg:w="28116"/><text x="42.8463%" y="159.50">sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::do_perft (27,828 samples, 56.78%)</title><rect x="43.1839%" y="133" width="56.7814%" height="15" fill="rgb(232,23,21)" fg:x="21164" fg:w="27828"/><text x="43.4339%" y="143.50">sanctaphraxx.exe`sanctaphraxx::perft::do_perft</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::movegen::generate_moves(arrayvec::arrayvec::ArrayVec&lt;enum2$ (25,618 samples, 52.27%)</title><rect x="47.6933%" y="117" width="52.2720%" height="15" fill="rgb(244,5,23)" fg:x="23374" fg:w="25618"/><text x="47.9433%" y="127.50">sanctaphraxx.exe`sanctaphraxx::movegen::generate_moves(arrayvec::arrayvec::ArrayVec&lt;en..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::game_over (2,771 samples, 5.65%)</title><rect x="94.3112%" y="101" width="5.6541%" height="15" fill="rgb(226,81,46)" fg:x="46221" fg:w="2771"/><text x="94.5612%" y="111.50">sanctap..</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::curr_state (642 samples, 1.31%)</title><rect x="98.6553%" y="85" width="1.3100%" height="15" fill="rgb(247,70,30)" fg:x="48350" fg:w="642"/><text x="98.9053%" y="95.50"></text></g><g><title>sanctaphraxx.exe`core::slice::impl$0::last(ref$&lt;slice2$ (642 samples, 1.31%)</title><rect x="98.6553%" y="69" width="1.3100%" height="15" fill="rgb(212,68,19)" fg:x="48350" fg:w="642"/><text x="98.9053%" y="79.50"></text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::do_perft (48,986 samples, 99.95%)</title><rect x="0.0163%" y="373" width="99.9531%" height="15" fill="rgb(240,187,13)" fg:x="8" fg:w="48986"/><text x="0.2663%" y="383.50">sanctaphraxx.exe`sanctaphraxx::perft::do_perft</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move (48,986 samples, 99.95%)</title><rect x="0.0163%" y="357" width="99.9531%" height="15" fill="rgb(223,113,26)" fg:x="8" fg:w="48986"/><text x="0.2663%" y="367.50">sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move</text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop (48,986 samples, 99.95%)</title><rect x="0.0163%" y="341" width="99.9531%" height="15" fill="rgb(206,192,2)" fg:x="8" fg:w="48986"/><text x="0.2663%" y="351.50">sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::do_perft (48,986 samples, 99.95%)</title><rect x="0.0163%" y="325" width="99.9531%" height="15" fill="rgb(241,108,4)" fg:x="8" fg:w="48986"/><text x="0.2663%" y="335.50">sanctaphraxx.exe`sanctaphraxx::perft::do_perft</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move (48,984 samples, 99.95%)</title><rect x="0.0204%" y="309" width="99.9490%" height="15" fill="rgb(247,173,49)" fg:x="10" fg:w="48984"/><text x="0.2704%" y="319.50">sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move</text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop (48,984 samples, 99.95%)</title><rect x="0.0204%" y="293" width="99.9490%" height="15" fill="rgb(224,114,35)" fg:x="10" fg:w="48984"/><text x="0.2704%" y="303.50">sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::do_perft (48,984 samples, 99.95%)</title><rect x="0.0204%" y="277" width="99.9490%" height="15" fill="rgb(245,159,27)" fg:x="10" fg:w="48984"/><text x="0.2704%" y="287.50">sanctaphraxx.exe`sanctaphraxx::perft::do_perft</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move (48,960 samples, 99.90%)</title><rect x="0.0694%" y="261" width="99.9000%" height="15" fill="rgb(245,172,44)" fg:x="34" fg:w="48960"/><text x="0.3194%" y="271.50">sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move</text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop (48,960 samples, 99.90%)</title><rect x="0.0694%" y="245" width="99.9000%" height="15" fill="rgb(236,23,11)" fg:x="34" fg:w="48960"/><text x="0.3194%" y="255.50">sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::do_perft (48,960 samples, 99.90%)</title><rect x="0.0694%" y="229" width="99.9000%" height="15" fill="rgb(205,117,38)" fg:x="34" fg:w="48960"/><text x="0.3194%" y="239.50">sanctaphraxx.exe`sanctaphraxx::perft::do_perft</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move (48,295 samples, 98.54%)</title><rect x="1.4263%" y="213" width="98.5431%" height="15" fill="rgb(237,72,25)" fg:x="699" fg:w="48295"/><text x="1.6763%" y="223.50">sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move</text></g><g><title>sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop (48,294 samples, 98.54%)</title><rect x="1.4283%" y="197" width="98.5411%" height="15" fill="rgb(244,70,9)" fg:x="700" fg:w="48294"/><text x="1.6783%" y="207.50">sanctaphraxx.exe`alloc::vec::Vec&lt;sanctaphraxx::position::BoardState,alloc::alloc::Global&gt;::pop</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::do_perft (48,281 samples, 98.51%)</title><rect x="1.4548%" y="181" width="98.5146%" height="15" fill="rgb(217,125,39)" fg:x="713" fg:w="48281"/><text x="1.7048%" y="191.50">sanctaphraxx.exe`sanctaphraxx::perft::do_perft</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move (28,361 samples, 57.87%)</title><rect x="42.1004%" y="165" width="57.8690%" height="15" fill="rgb(235,36,10)" fg:x="20633" fg:w="28361"/><text x="42.3504%" y="175.50">sanctaphraxx.exe`sanctaphraxx::position::Position::pop_move</text></g><g><title>`0x7FFF5492AA58 (48,995 samples, 99.97%)</title><rect x="0.0020%" y="613" width="99.9714%" height="15" fill="rgb(251,123,47)" fg:x="1" fg:w="48995"/><text x="0.2520%" y="623.50">`0x7FFF5492AA58</text></g><g><title>`0x7FFF526A257D (48,995 samples, 99.97%)</title><rect x="0.0020%" y="597" width="99.9714%" height="15" fill="rgb(221,13,13)" fg:x="1" fg:w="48995"/><text x="0.2520%" y="607.50">`0x7FFF526A257D</text></g><g><title>sanctaphraxx.exe`__scrt_common_main_seh() (48,992 samples, 99.97%)</title><rect x="0.0082%" y="581" width="99.9653%" height="15" fill="rgb(238,131,9)" fg:x="4" fg:w="48992"/><text x="0.2582%" y="591.50">sanctaphraxx.exe`__scrt_common_main_seh()</text></g><g><title>sanctaphraxx.exe`invoke_main() (48,988 samples, 99.96%)</title><rect x="0.0163%" y="565" width="99.9572%" height="15" fill="rgb(211,50,8)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="575.50">sanctaphraxx.exe`invoke_main()</text></g><g><title>sanctaphraxx.exe`main (48,988 samples, 99.96%)</title><rect x="0.0163%" y="549" width="99.9572%" height="15" fill="rgb(245,182,24)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="559.50">sanctaphraxx.exe`main</text></g><g><title>sanctaphraxx.exe`std::rt::lang_start_internal (48,988 samples, 99.96%)</title><rect x="0.0163%" y="533" width="99.9572%" height="15" fill="rgb(242,14,37)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="543.50">sanctaphraxx.exe`std::rt::lang_start_internal</text></g><g><title>sanctaphraxx.exe`std::panic::catch_unwind (48,988 samples, 99.96%)</title><rect x="0.0163%" y="517" width="99.9572%" height="15" fill="rgb(246,228,12)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="527.50">sanctaphraxx.exe`std::panic::catch_unwind</text></g><g><title>sanctaphraxx.exe`std::panicking::try (48,988 samples, 99.96%)</title><rect x="0.0163%" y="501" width="99.9572%" height="15" fill="rgb(213,55,15)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="511.50">sanctaphraxx.exe`std::panicking::try</text></g><g><title>sanctaphraxx.exe`std::panicking::try::do_call (48,988 samples, 99.96%)</title><rect x="0.0163%" y="485" width="99.9572%" height="15" fill="rgb(209,9,3)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="495.50">sanctaphraxx.exe`std::panicking::try::do_call</text></g><g><title>sanctaphraxx.exe`std::rt::lang_start_internal::closure$2 (48,988 samples, 99.96%)</title><rect x="0.0163%" y="469" width="99.9572%" height="15" fill="rgb(230,59,30)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="479.50">sanctaphraxx.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>sanctaphraxx.exe`std::panic::catch_unwind (48,988 samples, 99.96%)</title><rect x="0.0163%" y="453" width="99.9572%" height="15" fill="rgb(209,121,21)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="463.50">sanctaphraxx.exe`std::panic::catch_unwind</text></g><g><title>sanctaphraxx.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (48,988 samples, 99.96%)</title><rect x="0.0163%" y="437" width="99.9572%" height="15" fill="rgb(220,109,13)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="447.50">sanctaphraxx.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>sanctaphraxx.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (48,988 samples, 99.96%)</title><rect x="0.0163%" y="421" width="99.9572%" height="15" fill="rgb(232,18,1)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="431.50">sanctaphraxx.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::main (48,988 samples, 99.96%)</title><rect x="0.0163%" y="405" width="99.9572%" height="15" fill="rgb(215,41,42)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="415.50">sanctaphraxx.exe`sanctaphraxx::main</text></g><g><title>sanctaphraxx.exe`sanctaphraxx::perft::split_perft (48,988 samples, 99.96%)</title><rect x="0.0163%" y="389" width="99.9572%" height="15" fill="rgb(224,123,36)" fg:x="8" fg:w="48988"/><text x="0.2663%" y="399.50">sanctaphraxx.exe`sanctaphraxx::perft::split_perft</text></g><g><title>`0x7FFF549AE5BF (6 samples, 0.01%)</title><rect x="99.9796%" y="565" width="0.0122%" height="15" fill="rgb(240,125,3)" fg:x="48999" fg:w="6"/><text x="100.2296%" y="575.50"></text></g><g><title>`0x7FFF548FA25A (6 samples, 0.01%)</title><rect x="99.9796%" y="549" width="0.0122%" height="15" fill="rgb(205,98,50)" fg:x="48999" fg:w="6"/><text x="100.2296%" y="559.50"></text></g><g><title>`0x7FFF548E8CAC (6 samples, 0.01%)</title><rect x="99.9796%" y="533" width="0.0122%" height="15" fill="rgb(205,185,37)" fg:x="48999" fg:w="6"/><text x="100.2296%" y="543.50"></text></g><g><title>all (49,009 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(238,207,15)" fg:x="0" fg:w="49009"/><text x="0.2500%" y="639.50"></text></g><g><title>`0x7FFF54943DDE (13 samples, 0.03%)</title><rect x="99.9735%" y="613" width="0.0265%" height="15" fill="rgb(213,199,42)" fg:x="48996" fg:w="13"/><text x="100.2235%" y="623.50"></text></g><g><title>`0x7FFF54943EB3 (13 samples, 0.03%)</title><rect x="99.9735%" y="597" width="0.0265%" height="15" fill="rgb(235,201,11)" fg:x="48996" fg:w="13"/><text x="100.2235%" y="607.50"></text></g><g><title>`0x7FFF5499A184 (13 samples, 0.03%)</title><rect x="99.9735%" y="581" width="0.0265%" height="15" fill="rgb(207,46,11)" fg:x="48996" fg:w="13"/><text x="100.2235%" y="591.50"></text></g></svg></svg>